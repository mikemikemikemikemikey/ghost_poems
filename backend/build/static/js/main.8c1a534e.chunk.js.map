{"version":3,"sources":["services/serviceHelper.js","services/poems.js","reducers/poemReducer.js","hooks/index.js","components/Notification.js","reducers/userReducer.js","reducers/messageReducer.js","store.js","services/socket.js","components/Style.js","components/PoemChild.js","components/PoemTitle.js","services/users.js","components/Poem.js","services/login.js","components/Login.js","components/About.js","components/CreateUser.js","components/NewPoem.js","App.js","index.js"],"names":["handle","promise","then","data","undefined","catch","error","config","headers","editContent","content","id","a","axios","put","request","response","status","Error","editTitle","title","console","log","addLike","poem","_id","addContent","head","post","removePoem","delete","setConfig","newToken","Authorization","getAll","get","create","includes","removeLike","initializePoems","dispatch","poemService","poems","type","poemReducer","state","action","useField","useState","value","setValue","onChange","event","target","onSubmit","Notification","message","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","paddingBottom","marginTop","marginBottom","style","className","data-cy","loginUser","user","userReducer","newMessage","messageReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","socket","socketIOClient","on","Button","styled","button","props","enjoyed","Input","div","input","StyledPoem","StyledTextArea","label","textarea","PoemChild","setMessage","edit","setEdit","editedContent","submitEdit","preventDefault","emit","mess","username","setTimeout","deletePoem","rows","cols","onClick","PoemTitle","useDispatch","getUser","newUser","Poem","useSelector","enjoyStyle","setEnjoyStyle","show","toggle","setToggle","addedContent","enjoyB","useRef","useEffect","userService","likedPoems","userLikes","addEnjoy","current","blur","likes","children","map","c","toggleView","submitContent","key","ref","login","credentials","Login","history","useHistory","password","handleLogin","loginService","window","localStorage","setItem","JSON","stringify","token","push","classname","About","href","CreateUser","createUser","length","NewPoem","createPoem","App","sort","setSort","viewSort","setViewSort","loggedUserJSON","getItem","parse","location","pathname","handleView","sortStyle","display","src","alt","activeStyle","fontWeight","to","exact","removeItem","options","placeholder","path","b","da","Date","updatedAt","getTime","sortNew","sortTop","sortSelector","p","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c1a534e.chunk.js","sourcesContent":["const handle = (promise) => {\n  return promise\n    .then(data => ([data, undefined]))\n    .catch(error => [undefined, error])\n}\n\nexport default handle","import axios from 'axios'\nimport handle from './serviceHelper'\nconst baseUrl = '/api/poems'\n\nlet config = {headers: null}\n\nconst setConfig = newToken => {\n  config = { headers: {Authorization: `bearer ${newToken}`}, }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst editContent = async (content, id) => {\n  const [request, error] = await handle(axios.put(`/api/poems/child/${id}`, {content}, config))\n  if(request) return\n  if(error.response.status === 401) throw new Error('wrong user')\n  throw new Error('sorry lines are too long')\n}\nconst editTitle = async (title, id) => {\n  console.log('test1')\n const [request, error] = await handle(axios.put(`/api/poems/title/${id}`, {title}, config ))\n if(request) return\n if(error.response.status === 401) throw new Error('wrong user')\n throw new Error('sorry too long')\n}\nconst addLike = async (poem) => {\n  await axios.put(`/api/poems/child/${poem._id}/${true}`, poem, config)\n}\nconst addContent = async (poem, head) => {\n  const [request, error] = await handle(axios.post(`api/poems/${head}`, poem, config))\n  if(request) return\n  if(error.response) {\n    throw new Error('sorry lines are too long')\n  }\n  throw new Error('error')\n}\nconst removePoem = async (poem) => {\n  await axios.delete(`api/poems/${poem._id}`, config)\n  \n}\nconst create = async (poem) => {\n  const [request, error] = await handle(axios.post(baseUrl, poem, config))\n  if(request) return request\n    if(error.response) {\n    if(error.response.data.error.includes('title')){\n        throw new Error('title is too long')\n      } else if (error.response.data.error.includes('content')){\n      throw new Error('first lines are too long')\n      } else { throw new Error( 'error')}\n    }  \n    throw new Error('error')\n}\nconst removeLike = async (id) => {\n  await axios.put(`api/poems/unlike/${id}`, null, config)\n}\n\nexport default { editTitle, addContent, setConfig, getAll, create, addLike, removePoem, editContent, removeLike}","import poemService from '../services/poems'\n\nconst poemReducer = (state =[], action) => {\n  switch(action.type){\n    case 'INIT':\n      return action.poems\n    case 'UPDATE':\n      return action.poems\n    default:\n      return state\n    }\n}\n\nexport const initializePoems = () => {\n  return async dispatch => {\n    const poems = await poemService.getAll()\n    dispatch({ type: 'INIT', poems })\n  }\n}\n\nexport default poemReducer","import { useState, } from 'react'\n\nconst useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n  const onSubmit = () => {\n    setValue(\"\")\n  }\n  \n  return {\n    type,\n    value,\n    onChange,\n    onSubmit,\n  }\n}\n\nexport default useField","import React from 'react'\n\nconst Notification = ({ message }) => {\n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    paddingBottom: 14,\n    marginTop: 8,\n    marginBottom: 0,\n  }\n\n  if (!message.error) errorStyle.color = 'green'\n  if (message.message === null) {\n    return null\n  }\n\n  return (\n    <div style={errorStyle} className=\"error\" data-cy='message'>\n      {message.message}\n    </div>\n  )\n}\n\nexport default Notification\n","const userReducer = (state = null, action) => {\n  switch(action.type){\n  case 'LOGIN':\n    return action.user\n  case 'LOGOUT' :\n    return null\n  default:\n    return state\n  }\n}\n\nexport const loginUser = (user) => {\n  return dispatch => {\n    dispatch({ type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT' })\n  }\n}\n\n\nexport default userReducer","\nconst messageReducer = (state = {message: null, error: false}, action) => {\n  switch(action.type){\n  case 'NEW':\n    return {message: action.message, error: action.error}\n  case 'REMOVE' :\n    return {message : null, error: false}\n  default:\n    return state\n  }\n}\n\nexport const newMessage = (message, error) => {\n  return dispatch => {\n    dispatch({\n      type: 'NEW',\n      message: message,\n      error\n    })\n  }\n}\n\nexport const removeMessage = () => {\n  return dispatch => {\n    dispatch({\n      type: 'REMOVE',\n    })\n  }\n}\n\nexport default messageReducer","\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport poemReducer from './reducers/poemReducer'\nimport userReducer from './reducers/userReducer'\nimport messageReducer from './reducers/messageReducer'\n\nconst reducer = combineReducers({\n  poems: poemReducer,\n  user: userReducer,\n  message: messageReducer,\n})\n\n\n  \n export const store = createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk),\n    ),\n  )\n\n  export default store","import socketIOClient from 'socket.io-client'\nimport { initializePoems } from '../reducers/poemReducer'\nimport { store } from '../store'\n\nconst socket = socketIOClient('http://localhost:3003/')\n\nsocket.on('data_send', () => {\n  store.dispatch(initializePoems())\n})\nexport default socket","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background: ${(props) => (props.enjoyed ? 'palevioletred'\n    : 'transparent')};\n  font-size 1em;\n  color: ${(props) => (props.enjoyed ? 'white'\n    : '#f2e8bf')};\n  border: 2px solid palevioletred;\n  margin: .25em .25em;\n  padding: 0.25em 1em;\n  transition: .5s all ease-out;\n\n  &:hover {\n    background-color: palevioletred;\n    color: white;\n  }\n  &:focus {\n    background-color: palevioletred;\n    color: white;\n  }\n`\nexport const Navigation = styled.div`\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nbackground: transparent;\npadding: 1em;\nposition: sticky;\ntop: 0;\nz-index: 2;\ntext-align: center;\n`\nexport const Input = styled.input`\nbackground-color: transparent;\nborder: 2px solid #f2e8bf;\nfont-size 1em;\ncolor: #f2e8bf;\nmax-width 90%;\n`\n\nexport const StyledPoem = styled.div`\nmax-width: 80%;\nbackground-color: transparent;\nborder-bottom: 2px solid gray;\n\n`\n\nexport const StyledLabel = styled.label`\nposition: absolute;\nwidth: 20%;\ntop: 8.2%;\nright: 8%;\nz-index: 1;\n`\n\nexport const StyledTextArea = styled.textarea`\nbackground-color: transparent;\nborder: 2px solid #f2e8bf;\nfont-size 16px;\ncolor: #f2e8bf;\nmax-width 90%;\n`\n","import React, { useState } from 'react'\nimport useField from '../hooks'\nimport poemService from '../services/poems'\nimport Notification from './Notification'\nimport socket from '../services/socket'\nimport { Button, StyledTextArea } from './Style'\n\nconst PoemChild = ({ poem, user }) => {\n  const [message, setMessage] = useState({ message: null, error: false })\n  const [edit, setEdit] = useState(false)\n  const editedContent = useField('text')\n  const { content } = poem\n\n  const editContent = () => {\n    setEdit(true)\n    editedContent.onChange({ target: { value: content } })\n  }\n  const submitEdit = async (event) => {\n    try {\n      event.preventDefault()\n      if(!user) throw new Error('please login to edit')\n      if (editedContent.value === '') throw new Error('ghostin too hard')\n      await poemService.editContent(editedContent.value, poem._id)\n      setEdit(false)\n      socket.emit('data_request')\n    } catch (err) {\n      setEdit(false)\n      let mess = err.message\n      if (err.message === 'wrong user') mess = `only ${poem.user.username} can edit this`\n      setMessage({ message: mess, error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n  const cancel = () => {\n    setEdit(false)\n  }\n  const deletePoem = async () => {\n    setEdit(false)\n    try {\n      await poemService.removePoem(poem)\n      socket.emit('data_request')\n    } catch (err) {\n      console.log(poem)\n      setMessage({ message: `only ${poem.user.username} can delete this content`, error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n\n  if (!poem) return null\n\n  return (\n    <div className=\"poem-content\">\n      {edit ? (\n        <form onSubmit={submitEdit}>\n          <div><StyledTextArea rows=\"2\" cols=\"30\" {...editedContent} /></div>\n          <div>\n            <Button type=\"submit\">edit</Button>\n            <Button onClick={deletePoem}>delete</Button>\n            <Button onClick={cancel}>nevermind</Button>\n          </div>\n        </form>\n      ) : <div onClick={editContent}>{content}</div>}\n      <Notification message={message} />\n    </div>\n  )\n}\n\nexport default PoemChild\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useField from '../hooks'\nimport poemService from '../services/poems'\nimport { initializePoems } from '../reducers/poemReducer'\nimport Notification from './Notification'\nimport { Input, Button } from './Style'\n\nconst PoemTitle = ({ poem, user}) => {\n  const dispatch = useDispatch()\n  const [message, setMessage] = useState({ message: null, error: false })\n  const [edit, setEdit] = useState(false)\n  const editedContent = useField('text')\n  const content = poem.title\n\n  const editContent = () => {\n    setEdit(true)\n    editedContent.onChange({ target: { value: content } })\n  }\n  const submitEdit = async (event) => {\n    try {\n      if(!user) throw new Error('please login to edit')\n      event.preventDefault()\n      if (!editedContent.value) throw new Error('ghostin too hard')\n      await poemService.editTitle(editedContent.value, poem._id)\n      setEdit(false)\n      dispatch(initializePoems())\n    } catch (err) {\n      setEdit(false)\n      let mess = err.message\n      if (err.message === 'wrong user') mess = `only ${poem.user.username} can edit this`\n      setMessage({ message: mess, error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n  const cancel = () => {\n    setEdit(false)\n  }\n\n  if (!poem) return null\n\n  return (\n    <div className=\"poem-content\">\n      {edit ? (\n        <form onSubmit={submitEdit}>\n          <div><Input {...editedContent} data-cy = 'title-input'/></div>\n          <div className=\"title-buttons\">\n            <Button type=\"submit\" data-cy = 'title-submit'>edit</Button>\n            <Button onClick={cancel}>nevermind</Button>\n          </div>\n        </form>\n      ) : <div className=\"poem-title\" onClick={editContent} data-cy = 'poem-title'>{content}</div>}\n      <Notification message={message} />\n    </div>\n  )\n}\n\nexport default PoemTitle\n","import axios from 'axios'\n\nconst getUser = async (id) => {\n  const response = await axios.get(`/api/users/${id}`)\n  return response.data\n}\n\nconst newUser = async (user) => {\n  const response = await axios.post('/api/users/', user)\n  return response.data\n}\n\nexport default {getUser, newUser}","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport PoemChild from './PoemChild'\nimport PoemTitle from './PoemTitle'\nimport Notification from './Notification'\nimport poemService from '../services/poems'\nimport userService from '../services/users'\nimport useField from '../hooks'\nimport { Button, StyledTextArea, StyledPoem } from './Style'\nimport socket from '../services/socket'\n\nconst Poem = ({ poem }) => {\n  const user = useSelector((state) => state.user)\n  const [message, setMessage] = useState({ message: null, error: false })\n  const [enjoyStyle, setEnjoyStyle] = useState(false)\n  const [toggle, setToggle] = useState({ show: false, label: 'contribute' })\n  const addedContent = useField('text')\n  const enjoyB = useRef(null)\n\n  useEffect(() => {\n    async function userLikes() {\n      const u = await userService.getUser(user.username)\n      if (u.likedPoems.includes(poem._id)) {\n        setEnjoyStyle(true)\n      }\n    }\n    if (user) userLikes()\n  }, [poem, user])\n\n  const addEnjoy = async () => {\n    enjoyB.current.blur()\n    try {\n      if (!user) throw new Error('please login to enjoy :)')\n      \n      if (!enjoyStyle) {\n        await poemService.addLike({\n          ...poem,\n          likes: poem.likes + 1,\n          user: poem.user.id,\n          children: poem.children ? poem.children.map((c) => c._id) : null,\n        })\n\n        socket.emit('data_request')\n        setEnjoyStyle(true)\n      } else {\n        await poemService.removeLike(poem._id)\n        console.log('test remove')\n        socket.emit('data_request')\n        setEnjoyStyle(false)\n      }\n    } catch (err) {\n      console.log(err)\n      setMessage({ message: err.message, error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n\n  const toggleView = () => {\n    if (user) {\n      if (toggle.show) {\n        setToggle({ show: false, label: 'contribute' })\n        addedContent.onSubmit()\n      } else {\n        setToggle({ show: true, label: 'cancel' })\n      }\n    } else {\n      setMessage({ message: 'please login to contribute', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n  const submitContent = async (event) => {\n    event.preventDefault()\n    try {\n      await poemService.addContent({ content: addedContent.value }, poem._id)\n      addedContent.onSubmit()\n      setToggle({ show: false, label: 'contribute' })\n      socket.emit('data_request')\n    } catch (err) {\n      setMessage({ message: err, error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n\n  if (!poem) return null\n\n  return (\n    <div className=\"styled-poem\">\n      <StyledPoem >\n        <h2><PoemTitle poem={poem} user={user}/></h2>\n        <PoemChild poem={poem} key={poem._id} user = {user}/>\n        { poem.children ? poem.children.map((c) => <PoemChild poem={c} key={c._id} user = {user}/>) : null }\n        {toggle.show\n          ? (\n            <div>\n              <form onSubmit={submitContent}>\n                <div><StyledTextArea rows=\"2\" cols=\"30\" {...addedContent} data-cy='content-input'/></div>\n                <div>\n                  <Button type=\"submit\" data-cy='content-submit'>submit!</Button>\n                  <Button onClick={toggleView}>{toggle.label}</Button>\n                </div>\n              </form>\n            </div>\n          ) : null}\n        <div className=\"enjoy-button\">\n          {' '}\n          enjoys:\n          {poem.likes}\n          {' '}\n          <Button onClick={() => addEnjoy()} ref={enjoyB} enjoyed={enjoyStyle} data-cy = 'enjoy'> enjoy </Button>\n          {toggle.show ? null : <Button onClick={toggleView} data-cy = 'contribute-toggle'>{toggle.label}</Button>}\n        </div>\n        <Notification message={message} />\n      </StyledPoem>\n    </div>\n  )\n}\n\nexport default Poem\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport useField from '../hooks'\nimport poemService from '../services/poems'\nimport loginService from '../services/login'\nimport { loginUser } from '../reducers/userReducer'\nimport Notification from './Notification'\nimport { Input, Button } from './Style'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const [message, setMessage] = useState({ message: null, error: false })\n  const history = useHistory()\n  const username = useField('text')\n  const password = useField('password')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      const user = await loginService.login({\n        username: username.value, password: password.value,\n      })\n      window.localStorage.setItem(\n        'loggedPoemUser', JSON.stringify(user),\n      )\n      poemService.setConfig(user.token)\n      dispatch(loginUser(user))\n      username.onSubmit()\n      password.onSubmit()\n      history.push('/')\n    } catch (exception) {\n      setMessage({ message: 'wrong credentials', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-and-new\">\n      <h2>log in to ghost raps</h2>\n      <form onSubmit={handleLogin} data-cy=\"loginForm\" >\n        <label classname=\"login-and-new-input\">\n          username &nbsp;\n          <Input {...username} data-cy=\"login-username\" />\n        </label>\n        <label>\n          password &nbsp;\n          <Input {...password} data-cy=\"login-password\" />\n        </label>\n        <Button type=\"submit\" data-cy=\"login-button\">login</Button>\n      </form>\n      <Notification message={message} />\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <p className = 'about-paragraph'>Ghost Raps is an anonymous creative space for people to \n      collaborate on lyrics. Anyone can start a rap with a title and\n      a few lines. Then, anyone can contribute by adding lines. So create \n      an account, get creative, be inspired! If all goes according to plan I'll sell \n      the best raps to Drake (jokes)  \n      Shout out to <a href='//glowtxt.com'>Glowtxt</a> for the title image\n    </p>\n  )\n}\n\nexport default About","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport useField from '../hooks'\nimport userService from '../services/users'\nimport Notification from './Notification'\nimport { newMessage } from '../reducers/messageReducer'\nimport poemService from '../services/poems'\nimport loginService from '../services/login'\nimport { loginUser } from '../reducers/userReducer'\nimport { Input, Button } from './Style'\n\nconst CreateUser = () => {\n  const [message, setMessage] = useState({ message: null, error: false })\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const username = useField('text')\n  const password = useField('password')\n\n  const createUser = async (event) => {\n    event.preventDefault()\n    if (username.value === '' || password.value === '') {\n      setMessage({ message: 'ghostin too hard', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n      return\n    }\n    if(password.value.length <= 3){\n      setMessage({ message: 'need password length longer than 3 characters', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n      return\n    }\n    try {\n      await userService.newUser({ username: username.value, password: password.value })\n      dispatch(newMessage(`new user ${username.value} created!`, false))\n      username.onSubmit()\n      password.onSubmit()\n      const user = await loginService.login({\n        username: username.value, password: password.value,\n      })\n      window.localStorage.setItem(\n        'loggedPoemUser', JSON.stringify(user),\n      )\n      poemService.setConfig(user.token)\n      dispatch(loginUser(user))\n      history.push('/')\n    } catch (err) {\n      setMessage({ message: 'username needs to be unique', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n  return (\n    <div className=\"login-and-new\">\n      <h2>create user</h2>\n      <form onSubmit={createUser}>\n        <label classname=\"login-and-new-input\">\n          username &nbsp;\n          <Input {...username} />\n        </label>\n        \n        <label>\n          password &nbsp;\n          <Input {...password} />\n        </label>\n        <Button type=\"submit\" data-cy=\"create-button\">create!</Button>\n      </form>\n      <Notification message={message} />\n    </div>\n  )\n}\nexport default CreateUser\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport useField from '../hooks'\nimport poemService from '../services/poems'\nimport Notification from './Notification'\nimport { newMessage } from '../reducers/messageReducer'\nimport socket from '../services/socket'\nimport { Input, Button, StyledTextArea } from './Style'\n\nconst NewPoem = () => {\n  const user = useSelector((state) => state.user)\n  const [message, setMessage] = useState({ message: null, error: false })\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const title = useField('text')\n  const content = useField('text')\n\n  const createPoem = async (event) => {\n    event.preventDefault()\n    if (user) {\n      if (title.value === '' || content.value === '') {\n        setMessage({ message: 'ghostin too hard', error: true })\n        setTimeout(() => {\n          setMessage({ message: null, error: false })\n        }, 5000)\n        return\n      }\n      try {\n        await poemService.create({ title: title.value, content: content.value })\n        dispatch(newMessage(`new rap ${title.value} created!`, false))\n        title.onSubmit()\n        content.onSubmit()\n        socket.emit('data_request')\n        history.push('/')\n      } catch (err) {\n        console.log(err)\n        setMessage({ message: err, error: true })\n        setTimeout(() => {\n          setMessage({ message: null, error: false })\n        }, 5000)\n      }\n    } else {\n      setMessage({ message: 'please login to create a rap', error: true })\n      setTimeout(() => {\n        setMessage({ message: null, error: false })\n      }, 5000)\n    }\n  }\n  return (\n    <div className=\"new-content\">\n      <h2>create rap</h2>\n      <form onSubmit={createPoem} data-cy=\"poemForm\">\n        <div>\n          title\n          <br />\n          <Input {...title} data-cy=\"poemTitle\" />\n        </div>\n        <div>\n          first lines...\n          <br />\n          <StyledTextArea rows=\"2\" cols=\"40\" {...content} data-cy=\"poemContent\" />\n        </div>\n        <Button type=\"submit\" data-cy=\"create-button\">create!</Button>\n      </form>\n      <div className = 'notification-wrapper'>\n        <Notification message={message} />\n      </div>\n    </div>\n  )\n}\nexport default NewPoem\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './App.css'\nimport Select from 'react-styled-select'\nimport { Switch, Route, NavLink } from 'react-router-dom'\nimport { initializePoems } from './reducers/poemReducer'\nimport Poem from './components/Poem'\nimport Login from './components/Login'\nimport About from './components/About'\nimport Notification from './components/Notification'\nimport CreateUser from './components/CreateUser'\nimport poemService from './services/poems'\nimport { loginUser, logoutUser } from './reducers/userReducer'\nimport NewPoem from './components/NewPoem'\nimport { Button } from './components/Style'\nimport { removeMessage } from './reducers/messageReducer'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const message = useSelector((state) => state.message)\n  const poems = useSelector((state) => state.poems)\n  const user = useSelector((state) => state.user)\n  const [sort, setSort] = useState('new')\n  const [viewSort, setViewSort] = useState('flex')\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPoemUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(loginUser(user))\n      poemService.setConfig(user.token)\n    }\n    dispatch(initializePoems())\n    if (message.message) {\n      setTimeout(() => {\n        dispatch(removeMessage())\n      }, 5000)\n    }\n  }, [dispatch, message])\n  \n  useEffect(() => {\n    if(window.location.pathname === '/'){\n      setViewSort('flex')\n    } else {\n      setViewSort('none')\n    }\n  },[])\n\n  const handleLogout = () => {\n    dispatch(logoutUser())\n    poemService.setConfig(null)\n    window.localStorage.removeItem('loggedPoemUser')\n  }\n  const sortTop = (poems) => {\n    poems.sort((a, b) => b.likes - a.likes)\n    return poems\n  }\n  const sortNew = (poems) => {\n    poems.sort((a, b) => {\n      const da = new Date(a.updatedAt).getTime()\n      const db = new Date(b.updatedAt).getTime()\n      return db - da\n    })\n    return poems\n  }\n\n  const sortSelector = (poems, sort) => {\n    if (sort === 'new') return sortNew(poems)\n    if (sort === 'top') return sortTop(poems)\n  }\n  const handleChange = (value) => {\n    setSort(value)\n  }\n  const handleView = (value) => {\n    setViewSort(value)\n  }\n  const sortStyle = {\n    display: viewSort\n  }\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"left-col\">\n        <div>\n\n          <img className=\"ghost-title\" src='/GhostRaps.gif' alt=\"title\" />\n\n          <div className=\"navigation\">\n            <NavLink  activeStyle={{ fontWeight: \"bold\",color: \"gray\" }} \n              className=\"link\" to='/' exact data-cy=\"link-home\" onClick = {() => handleView('flex')}>home</ NavLink>\n            <NavLink activeStyle={{ fontWeight: \"bold\",color: \"gray\" }}\n              className=\"link\" to=\"/new_rap\" data-cy=\"link-new-rap\" onClick = {() => handleView('none')} >new rap</NavLink>\n            <NavLink activeStyle={{ fontWeight: \"bold\",color: \"gray\" }}\n              className=\"link\" to=\"/about\" onClick = {() => handleView('none')} >about</NavLink>\n            {user ? null : <NavLink activeStyle={{ fontWeight: \"bold\",color: \"gray\" }}\n                className=\"link\" to=\"/create_user\" data-cy = 'link-new-user' onClick = {() => handleView('none')} >new user</NavLink>}\n            {user\n              ? (\n                <span className=\"header-span\">\n                  {user.username}\n                  {' '}\n                  logged in\n                  {' '}\n                  <Button onClick={handleLogout}>logout</Button>\n                </span>\n              )\n              : <NavLink activeStyle={{ fontWeight: \"bold\",color: \"gray\" }}\n                  className=\"link\" to=\"/login\" data-cy = 'link-login' onClick = {() => handleView('none')} >login</NavLink>}\n          </div>\n\n          <div className=\"sort-bar\" style = {sortStyle}>\n            <span className=\"sort-span\"> sort... </span>\n            {' '}\n            <Select\n              className=\"dark-theme\"\n              options={[{ label: 'new', value: 'new' }, { label: 'top', value: 'top' }]}\n              label=\"sort\"\n              onChange={handleChange}\n              placeholder={sort}\n            />\n          </div>\n\n          <div className=\"ghost-div\">\n            <img className=\"ghost-image\" src='/spaceghost_purp2.jpg' alt=\"ghost\" />\n          </div>\n\n        </div>\n\n      </div>\n\n      <Switch>\n        <Route path=\"/login\" >\n          <div className=\"side-content\">\n            <Login />\n          </div>\n        </Route>\n        <Route path=\"/new_rap\">\n          <div className=\"side-content\">\n            <NewPoem />\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <div className=\"side-content\">\n            <About />\n          </div>\n        </Route>\n        <Route path=\"/create_user\">\n          <div className=\"side-content\">\n            <CreateUser />\n          </div>\n        </Route>\n        <Route exact path=\"/\">\n          <div className=\"home-page\">\n\n            <p className=\"main-message\">\n              <Notification message={message} />\n            </p>\n\n            <div>\n              {sortSelector(poems, sort).map((p) => (\n                <div key={p._id}>\n                  {!p.head ? <Poem poem={p} /> : null}\n                </div>\n              ))}\n            </div>\n          </div>\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport store from './store'\n\nconsole.log('public url: ', process.env.PUBLIC_URL)\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}